<configuration>
    <property>
    <name>yarn.resourcemanager.address</name>
      <value>{{master}}:8032</value>
    </property>
    <!--<property>
        <name>yarn.resourcemanager.hostname</name>
        <value>{{master}}</value>
        <description>The hostname of the RM.</description>
    </property>-->
    <property>
        <name>yarn.resourcemanager.scheduler.address</name>
        <value>{{master}}:8030</value>
    </property>
    <property>
        <name>yarn.resourcemanager.resource-tracker.address</name>
        <value>{{master}}:8031</value>
    </property>
    <property>
        <name>yarn.resourcemanager.admin.address</name>
        <value>{{master}}:8033</value>
    </property>
    <property>
        <name>yarn.resourcemanager.webapp.address</name>
        <value>{{master}}:8088</value>
    </property>

    <property>
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <value>{{scheduler_min_mem}}</value>
        <description>Minimum limit of memory to allocate to each container request at the Resource Manager.</description>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <value>{{scheduler_max_mem}}</value>
        <description>Maximum limit of memory to allocate to each container request at the Resource Manager.</description>
    </property>
    <property>
        <name>yarn.scheduler.minimum-allocation-vcores</name>
        <value>{{scheduler_min_vcores}}</value>
        <description>The minimum allocation for every container request at the RM, in terms of virtual CPU cores. Requests lower than this won't take effect, and the specified value will get allocated the minimum.</description>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-vcores</name>
        <value>{{scheduler_max_vcores}}</value>
        <description>The maximum allocation for every container request at the RM, in terms of virtual CPU cores. Requests higher than this won't take effect, and will get capped to this value.</description>
    </property>
    <property>
        <name>yarn.nodemanager.resource.memory-mb</name>
        <value>{{nodemanager_max_mem}}</value>
        <description>Physical memory, in MB, to be made available to running containers</description>
    </property>
    <property>
        <name>yarn.nodemanager.resource.cpu-vcores</name>
        <value>{{nodemanager_max_vcores}}</value>
        <description>Number of CPU cores that can be allocated for containers.</description>
    </property>
    
{{#secure}}
    <!-- resource manager -->
    <property>
        <name>yarn.resourcemanager.keytab</name>
        <value>/etc/rm.keytab</value>
    </property>
    <property>
        <name>yarn.resourcemanager.principal</name>
        <value>rm/kerberos.{{realm}}@{{realm}}</value>
    </property>
    <!-- node manager -->
    <property>
        <name>yarn.nodemanager.keytab</name>
        <value>/etc/nm.keytab</value>
    </property>
    <property>
        <name>yarn.nodemanager.principal</name>
        <value>nm/kerberos.{{realm}}@{{realm}}</value>
    </property>
    <!-- linux container execution
    yarn.nodemanager.container-executor.class 	org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor 	Use LinuxContainerExecutor.
    yarn.nodemanager.linux-container-executor.group 	hadoop 	Unix group of the NodeManager.
    yarn.nodemanager.linux-container-executor.path 	/path/to/bin/container-executor 	The path to the executable of Linux container executor.
    -->
{{/secure}}
</configuration>